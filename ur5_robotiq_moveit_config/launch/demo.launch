<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <arg name="rviz" default="true" />

  <arg name="gazebo" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur5_robotiq_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="real_robot" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->


  <!-- UR driver consists of a single node - does not currrently follow ROS-I convention -->
  <node name="ur_driver" pkg="ur_driver" type="driver.py" args="192.168.1.155" output="screen">
    <!--    <remap from="follow_joint_trajectory/" to="joint_trajectory_action/"/> -->
    <remap from="follow_joint_trajectory/cancel" to="/ur5_robotiq_joint_limited/arm_trajectory_controller/cancel" />
    <remap from="follow_joint_trajectory/feedback" to="/ur5_robotiq_joint_limited/arm_trajectory_controller/follow_joint_trajectory/feedback" />
    <remap from="follow_joint_trajectory/goal" to="/ur5_robotiq_joint_limited/arm_trajectory_controller/follow_joint_trajectory/goal" />
    <remap from="follow_joint_trajectory/result" to="/ur5_robotiq_joint_limited/arm_trajectory_controller/follow_joint_trajectory/result" />
    <remap from="follow_joint_trajectory/status" to="/ur5_robotiq_joint_limited/arm_trajectory_controller/follow_joint_trajectory/status" />

  </node>

  <!-- We do not have a robot connected, so publish fake joint states -->
  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/> 
    <rosparam param="/source_list">[/joint_states]</rosparam>
  </node>-->

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find ur5_robotiq_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <!-- <arg name="joint_states_topic" value="ur5_robotiq_joint_limited/joint_states"/> -->
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find ur5_robotiq_moveit_config)/launch/moveit_rviz.launch" if="$(arg rviz)">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find ur5_robotiq_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>

</launch>
