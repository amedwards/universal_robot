<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- start gazebo with an empty plane -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
  </include>

    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen"/>
  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur5_robotiq_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>


  <group ns="ur5_robotiq_joint_limited" >

    <!-- Load joint controller configurations from YAML filoe to parameter server -->
    <rosparam file="$(find ur5_robotiq_control)/config/ur5_robotiq_control.yaml" command="load"/>

    <!--   <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/> -->
    <node name="arm_controller_spawner" pkg="controller_manager"
      type="spawner" respawn="true" output="screen" args="arm_trajectory_controller" />

    <!-- Set the param that trajectory_execution_manager needs to find the controller plugin -->

    <rosparam file="$(find ur_gazebo)/controller/joint_state_controller.yaml" command="load"/>
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" />

    <!-- The rest of the params are specific to this plugin -->
    <!--<rosparam file="$(find ur5_robotiq_moveit_config)/config/fake_controllers.yaml"/>-->
  </group>

    <!-- If database loading was enabled, start mongodb as well -->
    <include file="$(find ur5_robotiq_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)"/>

    <rosparam file="$(find ur5_robotiq_moveit_config)/config/controllers.yaml"/>

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find ur5_robotiq_moveit_config)/launch/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>  
      <!--<arg name="fake_execution" value="true"/>-->
      <arg name="info" value="true"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="load_robot_description" value="false"/>
      <arg name="joint_states_topic" value="ur5_robotiq_joint_limited/joint_states"/>
    </include>


    <!-- Run Rviz and load the default config to see the state of the move_group node -->
    <include file="$(find ur5_robotiq_moveit_config)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>
</launch>
 
